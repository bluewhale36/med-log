/* 화면 전체를 덮는 오버레이 (클릭 방지용) */
.loading-overlay {
    display: none; /* 평소에는 숨겨져 있도록 설정 */
    position: fixed; /* 뷰포트 기준으로 위치 고정 */
    top: 0;
    left: 0;
    width: 100%; /* 너비 100% */
    height: 100%; /* 높이 100% */
    background-color: rgba(0, 0, 0, 0.4); /* 반투명한 검은색 배경 */
    z-index: 2000; /* 다른 요소들보다 위에 표시되도록 z-index 설정 */
}

/* 상단 알림 바 (토스트) 기본 스타일 */
.toast {
    position: fixed; /* 뷰포트 기준으로 위치 고정 */
    top: -100px; /* 초기 위치를 화면 상단 바깥으로 설정 */
    left: 50%; /* 가로축 중앙에서 시작 */
    transform: translateX(-50%); /* 자신의 너비 절반만큼 왼쪽으로 이동하여 완벽한 중앙 정렬 */
    padding: 16px 24px; /* 내부 여백 */
    border-radius: 8px; /* 모서리를 둥글게 */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* 그림자 효과 */
    z-index: 2001; /* 오버레이보다 위에 표시 */
    display: flex; /* 내부 요소(아이콘, 메시지)를 정렬하기 위해 Flexbox 사용 */
    align-items: center; /* 내부 요소들을 세로축 중앙에 정렬 */
    gap: 24px; /* 내부 요소들 사이의 간격 */
    transition: top 0.4s ease-in-out; /* top 속성 변경 시 0.4초 동안 부드러운 애니메이션 효과 적용 */
    color: white; /* 기본 글자색 */
    min-width: 300px; /* 최소 너비 */
    max-width: 90%; /* 최대 너비 */
}

/* 토스트가 화면에 표시될 때 적용되는 클래스 */
.toast.show {
    top: 20px; /* 화면 상단에서 20px 떨어진 위치로 이동 */
}

/* 상태별 스타일 (JS에서 클래스를 동적으로 추가/변경) */
.toast.loading {
    background-color: #3498db; /* 로딩 상태일 때 파란색 배경 */
}
.toast.success {
    background-color: #2ecc71; /* 성공 상태일 때 초록색 배경 */
}
.toast.error {
    background-color: #e74c3c; /* 실패 상태일 때 빨간색 배경 */
}

/* 메시지 텍스트 스타일 */
.toast-message {
    display: flex;
    width: fit-content;
    height: fit-content;
    align-items: center;
    margin: 0; /* 기본 마진 제거 */
    font-size: 16px; /* 글자 크기 */
    font-weight: 500; /* 글자 두께 */
    line-height: 1; /* 수직 정렬을 돕기 위해 줄 높이를 글자 크기에 맞춤 */
}

/* 아이콘을 감싸는 div의 스타일 */
.toast-icon {
    width: 24px; /* 너비 고정 */
    height: 24px; /* 높이 고정 */
}

/* 로딩 스피너 스타일 */
.toast-icon .spinner {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    border: 3px solid rgba(255, 255, 255, 0.3); /* 스피너의 기본 테두리 */
    border-top-color: #fff; /* 스피너의 회전하는 부분 색상 */
    border-radius: 50%; /* 원 모양으로 만듦 */
    animation: spin 1s linear infinite; /* 'spin' 애니메이션을 1초 동안 무한 반복 */
}

/* 스피너 회전 애니메이션 정의 */
@keyframes spin {
    to { transform: rotate(360deg); } /* 360도 회전 */
}

/* 성공(체크), 실패(X) 아이콘 (SVG) 스타일 */
.toast-icon svg {
    width: 100%; /* 부모 요소(.toast-icon)의 너비를 꽉 채움 */
    height: 100%; /* 부모 요소(.toast-icon)의 높이를 꽉 채움 */
}